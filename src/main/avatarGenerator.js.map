{"version":3,"file":"avatarGenerator.js","sourceRoot":"","sources":["avatarGenerator.ts"],"names":[],"mappings":"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","sourcesContent":["import Color from 'color';\r\nimport jimp from 'jimp';\r\nimport fs from 'fs';\r\n\r\n// @ts-ignore\r\nimport playerBase from '../../static/images/generate/player.png'; // @ts-ignore\r\n// import balloonBase from '../../static/images/generate/balloon.png'; // @ts-ignore\r\n// import kidBase from '../../static/images/generate/kid.png'; // @ts-ignore\r\nimport ghostBase from '../../static/images/generate/ghost.png'; // @ts-ignore\r\nimport { app } from 'electron';\r\n\r\nexport const DEFAULT_PLAYERCOLORS = [\r\n\t['#C51111', '#7A0838'],\r\n\t['#132ED1', '#09158E'],\r\n\t['#117F2D', '#0A4D2E'],\r\n\t['#ED54BA', '#AB2BAD'],\r\n\t['#EF7D0D', '#B33E15'],\r\n\t['#F5F557', '#C38823'],\r\n\t['#3F474E', '#1E1F26'],\r\n\t['#FFFFFF', '#8394BF'],\r\n\t['#6B2FBB', '#3B177C'],\r\n\t['#71491E', '#5E2615'],\r\n\t['#38FEDC', '#24A8BE'],\r\n\t['#50EF39', '#15A742'],\r\n];\r\n\r\nfunction pathToHash(input: string): number {\r\n\tlet hash = 0;\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\tconst char = input.charCodeAt(i);\r\n\t\thash = (hash << 5) - hash + char;\r\n\t\thash = hash & hash; // Convert to 32bit integer\r\n\t}\r\n\treturn hash;\r\n}\r\n\r\nexport function numberToColorHex(colour: number): string {\r\n\treturn (\r\n\t\t'#' +\r\n\t\t(colour & 0x00ffffff)\r\n\t\t\t.toString(16)\r\n\t\t\t.padStart(6, '0')\r\n\t\t\t.match(/.{1,2}/g)\r\n\t\t\t?.reverse()\r\n\t\t\t.join('')\r\n\t);\r\n}\r\n\r\n\r\nasync function colorImages(playerColors: string[][], image: string, imagename: string): Promise<void> {\r\n\tconst img = await jimp.read(Buffer.from(image.replace(/^data:image\\/png;base64,/, ''), 'base64')); //`${app.getAppPath()}/../test/${imagename}.png`\r\n\tconst originalData = new Uint8Array(img.bitmap.data);\r\n\tfor (let colorId = 0; colorId < playerColors.length; colorId++) {\r\n\t\tconst color = playerColors[colorId][0];\r\n\t\tconst shadow = playerColors[colorId][1];\r\n\t\tawait colorImage(\r\n\t\t\timg,\r\n\t\t\toriginalData,\r\n\t\t\tcolor,\r\n\t\t\tshadow,\r\n\t\t\t`${app.getPath('userData')}/static/generated/${imagename}/${colorId}.png`\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction rgb2hsv(r: number, g: number, b: number) {\r\n\tlet v = Math.max(r, g, b), c = v - Math.min(r, g, b);\r\n\tlet h = c && ((v == r) ? (g - b) / c : ((v == g) ? 2 + (b - r) / c : 4 + (r - g) / c));\r\n\treturn [60 * (h < 0 ? h + 6 : h), v && c / v, v];\r\n}\r\n\r\nfunction isBetween(h: number, h1: number, maxdiffrence: number) {\r\n\treturn 180 - Math.abs(Math.abs(h - h1) - 180) < maxdiffrence;\r\n}\r\n\r\nasync function colorImage(img: jimp, originalData: Uint8Array, color: string, shadow: string, savepath: string, returnImg = false) {\r\n\timg.bitmap.data = new Uint8Array(originalData) as Buffer;\r\n\tfor (let i = 0, l = img.bitmap.data.length; i < l; i += 4) {\r\n\t\tconst data = img.bitmap.data;\r\n\t\tconst r = data[i];\r\n\t\tconst g = data[i + 1];\r\n\t\tconst b = data[i + 2];\r\n\t\t//   let alpha = data[i + 3];\r\n\t\tconst h = rgb2hsv(r, g, b);\r\n\r\n\t\tif ((h[1] > 0.4) && (isBetween(h[0], 240, 30) || isBetween(h[0], 0, 100) || isBetween(h[0], 120, 40))) { //  )\r\n\r\n\t\t\tconst pixelColor = Color('#000000')\r\n\t\t\t\t.mix(Color(shadow), b / 255)\r\n\t\t\t\t.mix(Color(color), r / 255)\r\n\t\t\t\t.mix(Color('#9acad5'), g / 255);\r\n\t\t\tdata[i] = pixelColor.red();\r\n\t\t\tdata[i + 1] = pixelColor.green();\r\n\t\t\tdata[i + 2] = pixelColor.blue();\r\n\t\t}\r\n\t}\r\n\tvar savepathTemp = `${savepath}.${Math.floor(Math.random() * 101)}`;\r\n\tawait img.writeAsync(savepathTemp);\r\n\ttry{\r\n\tawait fs.promises.rename(savepathTemp, savepath);\r\n\t}\r\n\tcatch(ex){\r\n\t\tawait fs.promises.unlink(savepathTemp);\r\n\t}\r\n}\r\n\r\nexport async function GenerateAvatars(colors: string[][]): Promise<void> {\r\n\tconsole.log('Generating avatars..', `${app.getPath('userData')}/static/generated/`);\r\n\ttry {\r\n\t\tawait colorImages(colors, ghostBase, 'ghost');\r\n\t\tawait colorImages(colors, playerBase, 'player');\r\n\t} catch (exception) {\r\n\t\tconsole.log('error while generating the avatars..', exception);\r\n\t}\r\n}\r\n\r\nexport async function GenerateHat(imagePath: URL, colors: string[][], colorId: number, path: string) {\r\n\ttry {\r\n\t\tconst img = await jimp.read(imagePath.href);\r\n\t\tconst originalData = new Uint8Array(img.bitmap.data);\r\n\t\tconst color = colors[colorId][0];\r\n\t\tconst shadow = colors[colorId][1];\r\n\r\n\t\tconst temp = `${app.getPath('userData')}/static/generated/hats/${pathToHash(\r\n\t\t\timagePath + '/' + color + '/' + shadow\r\n\t\t)}.png`;\r\n\t\tif (!fs.existsSync(temp) || Date.now() - (await fs.promises.stat(temp)).mtimeMs > 300000) {\r\n\t\t\tawait colorImage(img, originalData, color, shadow, temp);\r\n\t\t}\r\n\t\treturn temp;\r\n\r\n\t} catch (exception) {\r\n\t\tconsole.log('error while generating the avatars..', exception);\r\n\t\treturn '';\r\n\t}\r\n}\r\n"]}