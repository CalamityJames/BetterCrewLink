{"version":3,"file":"ipc-handlers.js","sourceRoot":"","sources":["ipc-handlers.ts"],"names":[],"mappings":"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","sourcesContent":["import { app, dialog, ipcMain, shell } from 'electron';\r\nimport { platform, homedir } from 'os';\r\nimport { enumerateValues, enumerateKeys, HKEY } from 'registry-js';\r\nimport {\r\n\tDefaultGamePlatforms,\r\n\tGamePlatform,\r\n\tGamePlatformInstance,\r\n\tGamePlatformMap,\r\n\tPlatformRunType,\r\n} from '../common/GamePlatform';\r\nimport { parse } from 'vdf-parser';\r\nimport spawn from 'cross-spawn';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nimport { IpcMessages, IpcOverlayMessages } from '../common/ipc-messages';\r\n\r\n// Listeners are fire and forget, they do not have \"responses\" or return values\r\nexport const initializeIpcListeners = (): void => {\r\n\tipcMain.on(IpcMessages.SHOW_ERROR_DIALOG, (e, opts: { title: string; content: string }) => {\r\n\t\tif (typeof opts === 'object' && opts && typeof opts.title === 'string' && typeof opts.content === 'string') {\r\n\t\t\tdialog.showErrorBox(opts.title, opts.content);\r\n\t\t}\r\n\t});\r\n\r\n\tipcMain.on(IpcMessages.OPEN_AMONG_US_GAME, (_, platform: GamePlatformInstance) => {\r\n\t\tconst error = () => dialog.showErrorBox('Error', 'Could not start the game.');\r\n\r\n\t\tif (platform.launchType === PlatformRunType.URI) {\r\n\t\t\t// Just open the URI if we can to launch the game\r\n\t\t\t// TODO: Try to add error checking here\r\n\t\t\tshell.openExternal(platform.runPath);\r\n\t\t} else if (platform.launchType === PlatformRunType.EXE) {\r\n\t\t\ttry {\r\n\t\t\t\tconst process = spawn(\r\n\t\t\t\t\tpath.join(platform.runPath, platform.execute[0]),\r\n\t\t\t\t\tplatform.execute.slice(1),\r\n\t\t\t\t\t{ detached: true, stdio: 'ignore' }\r\n\t\t\t\t);\r\n\t\t\t\tprocess.on('error', error);\r\n\t\t\t\tprocess.unref();\r\n\t\t\t} catch (e) {\r\n\t\t\t\terror();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tipcMain.on(IpcMessages.RESTART_CREWLINK, () => {\r\n\t\tapp.relaunch();\r\n\t\tapp.quit();\r\n\t});\r\n\r\n\tipcMain.on(IpcMessages.SEND_TO_OVERLAY, (_, event: IpcOverlayMessages, ...args: unknown[]) => {\r\n\t\ttry {\r\n\t\t\tif (global.overlay) global.overlay.webContents.send(event, ...args);\r\n\t\t} catch (e) {\r\n\t\t\t/*empty*/\r\n\t\t}\r\n\t});\r\n\r\n\tipcMain.on(IpcMessages.SEND_TO_MAINWINDOW, (_, event: IpcOverlayMessages, ...args: unknown[]) => {\r\n\t\tconsole.log('SEND TO MAINWINDOW CALLLED');\r\n\t\ttry {\r\n\t\t\tif (global.mainWindow) global.mainWindow.webContents.send(event, ...args);\r\n\t\t} catch (e) {\r\n\t\t\t/*empty*/\r\n\t\t}\r\n\t});\r\n\r\n\tipcMain.on(IpcMessages.QUIT_CREWLINK, () => {\r\n\t\ttry {\r\n\t\t\tconst mainWindow = global.mainWindow;\r\n\t\t\tconst overlay = global.overlay;\r\n\t\t\tglobal.mainWindow = null;\r\n\t\t\tglobal.overlay = null;\r\n\t\t\tmainWindow?.close();\r\n\t\t\toverlay?.close();\r\n\t\t\tmainWindow?.destroy();\r\n\t\t\toverlay?.destroy();\r\n\t\t} catch {\r\n\t\t\t/* empty */\r\n\t\t}\r\n\t\tapp.quit();\r\n\t});\r\n};\r\n\r\n// Handlers are async cross-process instructions, they should have a return value\r\n// or the caller should be \"await\"'ing them.  If neither of these are the case\r\n// consider making it a \"listener\" instead for performance and readability\r\nexport const initializeIpcHandlers = (): void => {\r\n\tipcMain.handle(IpcMessages.REQUEST_PLATFORMS_AVAILABLE, (_, customPlatforms: GamePlatformMap) => {\r\n\t\tconst desktop_platform = platform();\r\n\r\n\t\t// Assume all game platforms are unavailable unless proven otherwise\r\n\t\tconst availableGamePlatforms: GamePlatformMap = {};\r\n\r\n\t\t// Deal with default platforms first\r\n\t\tif (desktop_platform === 'win32') {\r\n\t\t\t// Steam\r\n\t\t\tif (\r\n\t\t\t\tenumerateValues(HKEY.HKEY_CLASSES_ROOT, 'steam').find((value) =>\r\n\t\t\t\t\tvalue ? value.name === 'URL Protocol' : false\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tavailableGamePlatforms[GamePlatform.STEAM] = DefaultGamePlatforms[GamePlatform.STEAM];\r\n\t\t\t}\r\n\r\n\t\t\t// Epic Games\r\n\t\t\tif (\r\n\t\t\t\tenumerateValues(HKEY.HKEY_CLASSES_ROOT, 'com.epicgames.launcher').find((value) =>\r\n\t\t\t\t\tvalue ? value.name === 'URL Protocol' : false\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tavailableGamePlatforms[GamePlatform.EPIC] = DefaultGamePlatforms[GamePlatform.EPIC];\r\n\t\t\t}\r\n\r\n\t\t\t// Microsoft Store\r\n\t\t\t// Search for 'Innersloth.Among Us....' key and grab it\r\n\t\t\tconst microsoft_regkey = enumerateKeys(\r\n\t\t\t\tHKEY.HKEY_CURRENT_USER,\r\n\t\t\t\t'SOFTWARE\\\\Classes\\\\Local Settings\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\AppModel\\\\Repository\\\\Packages'\r\n\t\t\t).find((reg_key) => reg_key.startsWith('Innersloth.AmongUs' as string));\r\n\r\n\t\t\tif (microsoft_regkey) {\r\n\t\t\t\t// Grab the game path from the above key\r\n\t\t\t\tconst value_found = enumerateValues(\r\n\t\t\t\t\tHKEY.HKEY_CURRENT_USER,\r\n\t\t\t\t\t'SOFTWARE\\\\Classes\\\\Local Settings\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\AppModel\\\\Repository\\\\Packages' +\r\n\t\t\t\t\t\t'\\\\' +\r\n\t\t\t\t\t\tmicrosoft_regkey\r\n\t\t\t\t).find((value) => (value ? value.name === 'PackageRootFolder' : false));\r\n\t\t\t\tif (value_found) {\r\n\t\t\t\t\tavailableGamePlatforms[GamePlatform.MICROSOFT] = DefaultGamePlatforms[GamePlatform.MICROSOFT];\r\n\t\t\t\t\tavailableGamePlatforms[GamePlatform.MICROSOFT].runPath = value_found.data as string;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (desktop_platform === 'linux') {\r\n\t\t\t// Add platform to availableGamePlatforms and setup data if platform is available, do nothing otherwise\r\n\t\t\ttry {\r\n\t\t\t\tconst vdfString = fs.readFileSync(homedir() + '/.steam/registry.vdf').toString();\r\n\t\t\t\tconst vdfObject = parse(vdfString) as {\r\n\t\t\t\t\tRegistry: { HKCU: { Software: { Valve: { Steam: { Apps: { 945360: { installed: number } } } } } } };\r\n\t\t\t\t};\r\n\t\t\t\t//checks if Among Us's listed as installed in the .vdf-file\r\n\t\t\t\tif (vdfObject['Registry']['HKCU']['Software']['Valve']['Steam']['Apps']['945360']['installed'] == 1) {\r\n\t\t\t\t\tavailableGamePlatforms[GamePlatform.STEAM] = DefaultGamePlatforms[GamePlatform.STEAM];\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t/* empty */\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Deal with custom client-added platforms\r\n\t\tfor (const key in customPlatforms) {\r\n\t\t\tconst game_platform = customPlatforms[key];\r\n\r\n\t\t\tif (game_platform.launchType === PlatformRunType.URI) {\r\n\t\t\t\t// I really have no clue how to check this, so we're trusting they exist\r\n\t\t\t\tavailableGamePlatforms[key] = game_platform;\r\n\t\t\t} else if (game_platform.launchType === PlatformRunType.EXE) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfs.accessSync(path.join(game_platform.runPath, game_platform.execute[0]), fs.constants.X_OK);\r\n\t\t\t\t\tavailableGamePlatforms[key] = game_platform;\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn availableGamePlatforms;\r\n\t});\r\n};\r\n"]}