{"version":3,"file":"offsetStore.js","sourceRoot":"","sources":["offsetStore.ts"],"names":[],"mappings":"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","sourcesContent":["import fetch from 'node-fetch'\r\nimport Errors from '../common/Errors';\r\n\r\nexport interface IOffsetsLookup {\r\n\tpatterns: {\r\n\t\tx64: { broadcastVersion: ISignature };\r\n\t\tx86: { broadcastVersion: ISignature };\r\n\t};\r\n\tversions: {\r\n\t\t[innerNetClientId: string]: {\r\n\t\t\tversion: string;\r\n\t\t\tfile: string;\r\n\t\t};\r\n\t};\r\n}\r\n\r\ninterface ISignature {\r\n\tsig: string;\r\n\taddressOffset: number;\r\n\tpatternOffset: number;\r\n}\r\n\r\nexport interface IOffsets {\r\n\tmeetingHud: number[];\r\n\tobjectCachePtr: number[];\r\n\tmeetingHudState: number[];\r\n\tallPlayersPtr: number[];\r\n\tallPlayers: number[];\r\n\tplayerCount: number[];\r\n\tplayerAddrPtr: number;\r\n\tshipStatus: number[];\r\n\tlightRadius: number[];\r\n\tshipStatus_systems: number[];\r\n\tshipStatus_map: number[];\r\n\tshipstatus_allDoors: number[];\r\n\tdoor_doorId: number;\r\n\tdoor_isOpen: number;\r\n\tdeconDoorUpperOpen: number[];\r\n\tdeconDoorLowerOpen: number[];\r\n\thqHudSystemType_CompletedConsoles: number[];\r\n\tHudOverrideSystemType_isActive: number[];\r\n\tminiGame: number[];\r\n\tplanetSurveillanceMinigame_currentCamera: number[];\r\n\tplanetSurveillanceMinigame_camarasCount: number[];\r\n\tsurveillanceMinigame_FilteredRoomsCount: number[];\r\n\tpalette: number[];\r\n\tpalette_shadowColor: number[];\r\n\tpalette_playercolor: number[];\r\n\tplayerControl_GameOptions: number[];\r\n\tgameOptions_MapId: number[];\r\n\tgameOptions_MaxPLayers: number[];\r\n\tconnectFunc: number;\r\n\tfixedUpdateFunc: number;\r\n\tshowModStampFunc: number;\r\n\tmodLateUpdateFunc: number;\r\n\tpingMessageString: number;\r\n\tserverManager_currentServer: number[];\r\n\tinnerNetClient: {\r\n\t\tbase: number[];\r\n\t\tnetworkAddress: number;\r\n\t\tnetworkPort: number;\r\n\t\tonlineScene: number;\r\n\t\tmainMenuScene: number;\r\n\t\tgameMode: number;\r\n\t\tgameId: number;\r\n\t\thostId: number;\r\n\t\tclientId: number;\r\n\t\tgameState: number;\r\n\t};\r\n\tplayer: {\r\n\t\tisLocal: number[];\r\n\t\tlocalX: number[];\r\n\t\tlocalY: number[];\r\n\t\tremoteX: number[];\r\n\t\tremoteY: number[];\r\n\t\troleTeam: number[];\r\n\t\tnameText?: number[];\r\n\t\tcurrentOutfit: number[];\r\n\t\toutfit: {\r\n\t\t\tcolorId: number[];\r\n\t\t\tplayerName: number[];\r\n\t\t\thatId: number[];\r\n\t\t\tskinId: number[];\r\n\t\t\tvisorId: number[];\r\n\t\t};\r\n\t\tbufferLength: number;\r\n\t\toffsets: number[];\r\n\t\tinVent: number[];\r\n\t\tclientId: number[];\r\n\t\tisDummy: number[]; // used for muting\r\n\t\tstruct: {\r\n\t\t\ttype:\r\n\t\t\t| 'INT'\r\n\t\t\t| 'INT_BE'\r\n\t\t\t| 'UINT'\r\n\t\t\t| 'UINT_BE'\r\n\t\t\t| 'SHORT'\r\n\t\t\t| 'SHORT_BE'\r\n\t\t\t| 'USHORT'\r\n\t\t\t| 'USHORT_BE'\r\n\t\t\t| 'FLOAT'\r\n\t\t\t| 'CHAR'\r\n\t\t\t| 'BYTE'\r\n\t\t\t| 'SKIP';\r\n\t\t\tskip?: number;\r\n\t\t\tname: string;\r\n\t\t}[];\r\n\t};\r\n\tsignatures: {\r\n\t\tinnerNetClient: ISignature;\r\n\t\tmeetingHud: ISignature;\r\n\t\tgameData: ISignature;\r\n\t\tshipStatus: ISignature;\r\n\t\tminiGame: ISignature;\r\n\t\tpalette: ISignature;\r\n\t\tplayerControl: ISignature;\r\n\t\tconnectFunc: ISignature;\r\n\t\tfixedUpdateFunc: ISignature;\r\n\t\tpingMessageString: ISignature;\r\n\t\tserverManager: ISignature;\r\n\t\tshowModStamp: ISignature;\r\n\t\tmodLateUpdate: ISignature;\r\n\t};\r\n\toldMeetingHud: boolean;\r\n\tdisableWriting: boolean;\r\n}\r\n\r\nconst BASE_URL = \"https://raw.githubusercontent.com/OhMyGuus/BetterCrewlink-Offsets/main\"\r\nexport async function fetchOffsetLookup(): Promise<IOffsetsLookup> {\r\n\tconsole.log(`Fetching lookup file`);\r\n\treturn fetch(`${BASE_URL}/lookup.json`)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => { return data as IOffsetsLookup })\r\n\t\t.catch((_) => { throw Errors.LOOKUP_FETCH_ERROR })\r\n}\r\n\r\nconst OFFSETS_URL = `${BASE_URL}/offsets`\r\nexport async function fetchOffsetsJson(is_64bit: boolean, filename: string): Promise<IOffsets> {\r\n\tconsole.log(`Fetching file: ${filename}`);\r\n\treturn fetch(`${OFFSETS_URL}/${is_64bit ? 'x64' : 'x86'}/${filename}`)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => { return data as IOffsets })\r\n\t\t.catch((_) => { throw Errors.LOOKUP_FETCH_ERROR })\r\n}\r\n\r\n// export function TempFixOffsets(offsetsOld: IOffsets): IOffsets {\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.innerNetClient.gameState = 0x6c;\r\n// \toffsets.innerNetClient.gameId = 0x48;\r\n// \toffsets.innerNetClient.hostId = 0x4c;\r\n// \toffsets.innerNetClient.clientId = 0x50;\r\n// \toffsets.player.struct[3].skip = 1;\r\n// \toffsets.player.struct[4].type = 'USHORT';\r\n// \toffsets.player.struct.splice(5, 0, { type: 'SKIP', skip: 1, name: 'unused' });\r\n// \treturn offsets;\r\n// }\r\n\r\n// export function TempFixOffsets2(offsetsOld: IOffsets): IOffsets {\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.player.localX[0] = 0x60;\r\n// \toffsets.player.localY[0] = 0x60;\r\n// \toffsets.player.remoteX[0] = 0x60;\r\n// \toffsets.player.remoteY[0] = 0x60;\r\n// \toffsets.shipStatus_map[0] = 0xd4;\r\n// \toffsets.innerNetClient.gameState = 0x64;\r\n// \toffsets.innerNetClient.gameId = 0x40;\r\n// \toffsets.innerNetClient.hostId = 0x44;\r\n// \toffsets.innerNetClient.clientId = 0x48;\r\n// \toffsets.player.struct = offsets.player.struct.filter((o) => o.name !== 'COLORBEFORE');\r\n// \toffsets.player.struct[4].skip = 2;\r\n// \toffsets.palette[0] = 0x1c57fc4;\r\n// \toffsets.palette_playercolor[0] = 0xe4;\r\n// \toffsets.palette_shadowColor[0] = 0xe8;\r\n// \toffsets.shipStatus_systems[0] = 0x84;\r\n\r\n// \treturn offsets;\r\n// }\r\n\r\n// export function TempFixOffsets3(offsetsOld: IOffsets): IOffsets {\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.player.localX[0] = 0x64;\r\n// \toffsets.player.localY[0] = 0x64;\r\n// \toffsets.player.remoteX[0] = 0x64;\r\n// \toffsets.player.remoteY[0] = 0x64;\r\n// \toffsets.palette_playercolor[0] = 0xe8;\r\n// \toffsets.palette_shadowColor[0] = 0xec;\r\n\r\n// \toffsets.signatures.gameData.patternOffset = 2;\r\n// \toffsets.signatures.gameData.sig = '8B 0D ? ? ? ? 8B F0 83 C4 10 8B 49 5C 8B 01';\r\n\r\n// \treturn offsets;\r\n// }\r\n\r\n// export function TempFixOffsets4(offsetsOld: IOffsets): IOffsets {\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.innerNetClient.gameState = 0x70;\r\n// \toffsets.innerNetClient.onlineScene = 0x7c;\r\n// \toffsets.innerNetClient.mainMenuScene = 0x80;\r\n\r\n// \treturn offsets;\r\n// }\r\n\r\n// export function TempFixOffsets5(offsetsOld: IOffsets): IOffsets {\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.player = {\r\n// \t\tstruct: [\r\n// \t\t\t{ type: 'SKIP', skip: 8, name: 'unused' },\r\n// \t\t\t{ type: 'UINT', name: 'id' },\r\n// \t\t\t{ type: 'UINT', name: 'name' },\r\n// \t\t\t{ type: 'SKIP', skip: 4, name: 'COLORBEFORE' },\r\n// \t\t\t{ type: 'UINT', name: 'color' },\r\n// \t\t\t{ type: 'UINT', name: 'hat' },\r\n// \t\t\t{ type: 'UINT', name: 'pet' },\r\n// \t\t\t{ type: 'UINT', name: 'skin' },\r\n// \t\t\t{ type: 'UINT', name: 'disconnected' },\r\n// \t\t\t{ type: 'UINT', name: 'taskPtr' },\r\n// \t\t\t{ type: 'BYTE', name: 'impostor' },\r\n// \t\t\t{ type: 'BYTE', name: 'dead' },\r\n// \t\t\t{ type: 'SKIP', skip: 2, name: 'unused' },\r\n// \t\t\t{ type: 'UINT', name: 'objectPtr' },\r\n// \t\t],\r\n// \t\tisDummy: [0x89],\r\n// \t\tisLocal: [0x54],\r\n// \t\tlocalX: [0x60, 80],\r\n// \t\tlocalY: [0x60, 84],\r\n// \t\tremoteX: [0x60, 60],\r\n// \t\tremoteY: [0x60, 64],\r\n// \t\tbufferLength: 56,\r\n// \t\toffsets: [0, 0],\r\n// \t\tinVent: [0x31],\r\n// \t\tclientId: [0x1c],\r\n// \t\troleTeam: [0xff],\r\n// \t\tcurrentOutfit: [0xff],\r\n\r\n// \t\toutfit: {\r\n// \t\t\tcolorId: [0xff],\r\n// \t\t\thatId: [0xff],\r\n// \t\t\tskinId: [0xff],\r\n// \t\t\tvisorId: [0xff],\r\n// \t\t\tplayerName: [0xff],\r\n// \t\t},\r\n// \t};\r\n// \t//\toffsets.palette[0] = 0x1ba85a4;\r\n// \toffsets.palette_shadowColor = [0xf8];\r\n// \toffsets.palette_playercolor = [0xf4];\r\n// \toffsets.innerNetClient.gameMode = 0x48;\r\n// \toffsets.innerNetClient.gameId = 0x4C;\r\n// \toffsets.innerNetClient.hostId = 0x50;\r\n// \toffsets.innerNetClient.clientId = 0x54;\r\n// \toffsets.innerNetClient.gameState = 0x74;\r\n// \toffsets.innerNetClient.onlineScene = 0x80;\r\n// \toffsets.innerNetClient.mainMenuScene = 0x84;\r\n// \toffsets.shipStatus_systems = [0x8c];\r\n// \toffsets.shipstatus_allDoors = [0x84];\r\n// \toffsets.shipStatus_map = [0xe4];\r\n// \toffsets.lightRadius = [0x54, 0x1c];\r\n// \treturn offsets;\r\n// }\r\n\r\n\r\n// export function TempFixOffsets6(offsetsOld: IOffsets): IOffsets {\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.innerNetClient.gameMode = 0x48;\r\n// \toffsets.innerNetClient.gameId = 0x4C;\r\n// \toffsets.innerNetClient.hostId = 0x50;\r\n// \toffsets.innerNetClient.clientId = 0x54;\r\n// \toffsets.innerNetClient.gameState = 0x78;\r\n// \toffsets.innerNetClient.onlineScene = 0x88;\r\n// \toffsets.innerNetClient.mainMenuScene = 0x8C;\r\n// \treturn offsets;\r\n// }\r\n\r\n// export function TempFixOffsets7(offsetsOld: IOffsets): IOffsets {\r\n// \tconsole.log(\"TempFixed7\")\r\n// \tconst offsets = JSON.parse(JSON.stringify(offsetsOld)) as IOffsets; // ugly copy\r\n// \toffsets.player.struct = [\r\n// \t\t{ type: 'SKIP', skip: 8, name: 'unused' },\r\n// \t\t{ type: 'UINT', name: 'id' },\r\n// \t\t{ type: 'UINT', name: 'outfitsPtr' },\r\n// \t\t{ type: 'UINT', name: 'playerLevel' },\r\n// \t\t{ type: 'UINT', name: 'disconnected' },\r\n// \t\t{ type: 'UINT', name: 'rolePtr' },\r\n// \t\t{ type: 'UINT', name: 'taskPtr' },\r\n// \t\t{ type: 'BYTE', name: 'dead' },\r\n// \t\t{ type: 'SKIP', skip: 3, name: 'unused2' },\r\n// \t\t{ type: 'UINT', name: 'objectPtr' },\r\n// \t];\r\n// \toffsets.player.inVent = [0x38];\r\n// \toffsets.player.isDummy = [0xa9];\r\n// \toffsets.player.isLocal = [0x60];\r\n// \toffsets.player.localX = [0x6c, 80];\r\n// \toffsets.player.localY = [0x6c, 84];\r\n// \toffsets.player.remoteX = [0x6c, 60];\r\n// \toffsets.player.remoteY = [0x6c, 64];\r\n// \toffsets.player.currentOutfit = [0x34];\r\n// \toffsets.player.nameText = [0x58, 0x80];\r\n// \toffsets.gameOptions_MapId = [0x10];\r\n// \toffsets.gameOptions_MaxPLayers = [0x8];\r\n// \treturn offsets;\r\n// }\r\n"]}