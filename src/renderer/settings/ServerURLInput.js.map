{"version":3,"file":"ServerURLInput.js","sourceRoot":"","sources":["ServerURLInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACnD,OAAO,KAAK,MAAM,wBAAwB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AACzG,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AASlD,SAAS,iBAAiB,CAAC,GAAW;IACrC,IAAI;QACH,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAAE,OAAO,KAAK,CAAC;QACtD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,GAAG,CAAC,QAAQ,KAAK,YAAY;YAAE,OAAO,KAAK,CAAC;QAChD,IAAI,GAAG,CAAC,QAAQ,KAAK,GAAG;YAAE,OAAO,KAAK,CAAC;QACvC,OAAO,IAAI,CAAC;KACZ;IAAC,OAAO,CAAC,EAAE;QACX,OAAO,KAAK,CAAC;KACb;AACF,CAAC;AAED,MAAM,iBAAiB,GAA4B,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAiB;IACnH,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;IACzD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAExC,SAAS,CAAC,GAAG,EAAE;QACd,aAAa,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAEjB,SAAS,YAAY,CAAC,KAA0C;QAC/D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtC,aAAa,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,iBAAiB,CAAC,GAAG,CAAC,EAAE;YAC3B,WAAW,CAAC,IAAI,CAAC,CAAC;SAClB;aAAM;YACN,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC;IAED,OAAO,CACN;QACC,oBAAC,MAAM,IAAC,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IACxE,CAAC,CAAC,iCAAiC,CAAC,CAC7B;QACT,oBAAC,MAAM,IAAC,UAAU,QAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;YAC3D,oBAAC,WAAW,QAAE,CAAC,CAAC,iCAAiC,CAAC,CAAe;YACjE,oBAAC,aAAa,IAAC,SAAS,EAAE,SAAS;gBAClC,oBAAC,SAAS,IACT,SAAS,QACT,KAAK,EAAE,CAAC,UAAU,EAClB,UAAU,EAAE,KAAK,EACjB,KAAK,EAAE,CAAC,CAAC,gCAAgC,CAAC,EAC1C,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAC,UAAU,EAClB,KAAK,EAAC,SAAS,EACf,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,gCAAgC,CAAC,GAChE;gBACF,oBAAC,KAAK,IAAC,QAAQ,EAAC,OAAO,IAAE,CAAC,CAAC,wCAAwC,CAAC,CAAS;gBAC7E,oBAAC,MAAM,IACN,KAAK,EAAC,SAAS,EACf,OAAO,EAAC,WAAW,EACnB,OAAO,EAAE,GAAG,EAAE;wBACb,OAAO,CAAC,KAAK,CAAC,CAAC;wBACf,WAAW,CAAC,IAAI,CAAC,CAAC;wBAClB,UAAU,CAAC,yBAAyB,CAAC,CAAC;oBACvC,CAAC,IAEA,CAAC,CAAC,iCAAiC,CAAC,CAC7B,CACM;YAChB,oBAAC,aAAa;gBACb,oBAAC,MAAM,IACN,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,GAAG,EAAE;wBACb,WAAW,CAAC,IAAI,CAAC,CAAC;wBAClB,OAAO,CAAC,KAAK,CAAC,CAAC;wBACf,aAAa,CAAC,UAAU,CAAC,CAAC;oBAC3B,CAAC,IAEA,CAAC,CAAC,gBAAgB,CAAC,CACZ;gBACT,oBAAC,MAAM,IACN,QAAQ,EAAE,CAAC,UAAU,EACrB,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,GAAG,EAAE;wBACb,OAAO,CAAC,KAAK,CAAC,CAAC;wBACf,IAAI,GAAG,GAAG,UAAU,CAAC;wBACrB,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;4BAAE,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBAC9D,UAAU,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,IAEA,CAAC,CAAC,iBAAiB,CAAC,CACb,CACM,CACR,CACP,CACH,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAErD,eAAe,cAAc,CAAC","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { DialogContent, DialogTitle, DialogActions, Dialog, Button, TextField } from '@material-ui/core';\r\nimport { isHttpUri, isHttpsUri } from 'valid-url';\r\n\r\ntype URLInputProps = {\r\n\tt: (key: string) => string;\r\n\tinitialURL: string;\r\n\tonValidURL: (url: string) => void;\r\n\tclassName: string;\r\n};\r\n\r\nfunction validateServerUrl(uri: string): boolean {\r\n\ttry {\r\n\t\tif (!isHttpUri(uri) && !isHttpsUri(uri)) return false;\r\n\t\tconst url = new URL(uri);\r\n\t\tif (url.hostname === 'discord.gg') return false;\r\n\t\tif (url.pathname !== '/') return false;\r\n\t\treturn true;\r\n\t} catch (_) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nconst RawServerURLInput: React.FC<URLInputProps> = function ({ t, initialURL, onValidURL, className }: URLInputProps) {\r\n\tconst [isValidURL, setURLValid] = useState(true);\r\n\tconst [currentURL, setCurrentURL] = useState(initialURL);\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentURL(initialURL);\r\n\t}, [initialURL]);\r\n\r\n\tfunction handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tconst url = event.target.value.trim();\r\n\t\tsetCurrentURL(url);\r\n\t\tif (validateServerUrl(url)) {\r\n\t\t\tsetURLValid(true);\r\n\t\t} else {\r\n\t\t\tsetURLValid(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => setOpen(true)}>\r\n\t\t\t\t{t('settings.advanced.change_server')}\r\n\t\t\t</Button>\r\n\t\t\t<Dialog fullScreen open={open} onClose={() => setOpen(false)}>\r\n\t\t\t\t<DialogTitle>{t('settings.advanced.change_server')}</DialogTitle>\r\n\t\t\t\t<DialogContent className={className}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\terror={!isValidURL}\r\n\t\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\t\tlabel={t('settings.advanced.voice_server')}\r\n\t\t\t\t\t\tvalue={currentURL}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\thelperText={isValidURL ? '' : t('settings.advanced.voice_server')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Alert severity=\"error\">{t('settings.advanced.voice_server_warning')}</Alert>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t\tsetURLValid(true);\r\n\t\t\t\t\t\t\tonValidURL('https://bettercrewl.ink');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t('settings.advanced.reset_default')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetURLValid(true);\r\n\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t\tsetCurrentURL(initialURL);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t('buttons.cancel')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled={!isValidURL}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t\tlet url = currentURL;\r\n\t\t\t\t\t\t\tif (url.endsWith('/')) url = url.substring(0, url.length - 1);\r\n\t\t\t\t\t\t\tonValidURL(url);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t('buttons.confirm')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst ServerURLInput = React.memo(RawServerURLInput);\r\n\r\nexport default ServerURLInput;\r\n"]}