{"version":3,"file":"PublicLobbySettings.js","sourceRoot":"","sources":["PublicLobbySettings.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { DialogContent, DialogTitle, DialogActions, Dialog, Button, TextField, IconButton } from '@material-ui/core';\r\nimport languages from '../language/languages';\r\nimport { ILobbySettings } from '../../common/ISettings';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport ChevronLeft from '@material-ui/icons/ArrowBack';\r\n\r\ntype publicLobbySettingProps = {\r\n\tt: (key: string) => string;\r\n\tupdateSetting: (setting: string, newValue: any) => void;\r\n\tlobbySettings: ILobbySettings;\r\n\tcanChange: boolean;\r\n\tclassName: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tspecialButton: {\r\n\t\twidth: '90%',\r\n\t\tmarginBottom: '10px',\r\n\t},\r\n\theader: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tback: {\r\n\t\tcursor: 'pointer',\r\n\t\tposition: 'absolute',\r\n\t\tright: theme.spacing(1),\r\n\t\tWebkitAppRegion: 'no-drag',\r\n\t},\r\n}));\r\nconst RawPublicLobbySettings: React.FC<publicLobbySettingProps> = function ({\r\n\tt,\r\n\tlobbySettings,\r\n\tupdateSetting,\r\n\tcanChange,\r\n\tclassName,\r\n}: publicLobbySettingProps) {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst classes = useStyles();\r\n\tuseEffect(() => {\r\n\t\tsetLobbySettingState(lobbySettings);\r\n\t}, [lobbySettings]);\r\n\r\n\tconst [lobbySettingState, setLobbySettingState] = useState(lobbySettings);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\tclassName={classes.specialButton}\r\n\t\t\t\tonClick={() => setOpen(true)}\r\n\t\t\t\tdisabled={!canChange}\r\n\t\t\t>\r\n\t\t\t\t{t('settings.lobbysettings.public_lobby.change_settings')}\r\n\t\t\t</Button>\r\n\t\t\t<Dialog fullScreen open={open} onClose={() => setOpen(false)}>\r\n\t\t\t\t<div className={classes.header}>\r\n\t\t\t\t\t<DialogTitle>{t('settings.lobbysettings.public_lobby.change_settings')}</DialogTitle>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={classes.back}\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ChevronLeft htmlColor=\"#777\" />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<DialogContent className={className}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\t\tlabel={t('settings.lobbysettings.public_lobby.title')}\r\n\t\t\t\t\t\tvalue={lobbySettingState.publicLobby_title}\r\n\t\t\t\t\t\tonChange={(ev) => setLobbySettingState({ ...lobbySettingState, publicLobby_title: ev.target.value })}\r\n\t\t\t\t\t\tonBlur={(ev) => updateSetting('publicLobby_title', ev.target.value)}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tdisabled={!canChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tselect\r\n\t\t\t\t\t\tlabel={t('settings.lobbysettings.public_lobby.language')}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tSelectProps={{ native: true }}\r\n\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\tvalue={lobbySettingState.publicLobby_language}\r\n\t\t\t\t\t\tonChange={(ev) => setLobbySettingState({ ...lobbySettingState, publicLobby_language: ev.target.value })}\r\n\t\t\t\t\t\tonBlur={(ev) => updateSetting('publicLobby_language', ev.target.value)}\r\n\t\t\t\t\t\tdisabled={!canChange}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Object.entries(languages).map(([key, value]) => (\r\n\t\t\t\t\t\t\t<option key={key} value={key}>\r\n\t\t\t\t\t\t\t\t{value.name}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TextField>\r\n\r\n\t\t\t\t\t<Alert severity=\"error\">{t('settings.lobbysettings.public_lobby.ban_warning')}</Alert>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOpen(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t('buttons.confirm')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst PublicLobbySettings = React.memo(RawPublicLobbySettings);\r\n\r\nexport default PublicLobbySettings;\r\n"]}